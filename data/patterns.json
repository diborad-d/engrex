[
  {
    "pattern": "5 digit zip code",
    "regex": "\\b\\d{5}\\b",
    "explanation": "Matches exactly 5 digits (U.S. ZIP code)",
    "category": "location"
  },
  {
    "pattern": "us phone number",
    "regex": "^\\(?\\d{3}\\)?[-.\\s]?\\d{3}[-.\\s]?\\d{4}$",
    "explanation": "Matches a U.S. phone number with optional separators",
    "category": "contact"
  },
  {
    "pattern": "email address",
    "regex": "[\\w.-]+@[\\w.-]+\\.[a-z]{2,}",
    "explanation": "Matches a basic email format",
    "category": "contact"
  },
  {
    "pattern": "starts with capital letter and ends with period",
    "regex": "^[A-Z][^.]*\\.$",
    "explanation": "Starts with a capital letter, ends with a period",
    "category": "grammar"
  },
  {
    "pattern": "lowercase word",
    "regex": "\\b[a-z]+\\b",
    "explanation": "Matches any word made of lowercase letters",
    "category": "words"
  },
  {
    "pattern": "chatbot command prefix (e.g., /help)",
    "regex": "^/\\w+",
    "explanation": "Matches slash-prefixed commands like /start or /help",
    "category": "chatbot"
  },
  {
    "pattern": "URL",
    "regex": "https?://[\\w.-]+(?:\\.[\\w.-]+)+[/\\w.-]*",
    "explanation": "Matches HTTP or HTTPS URLs",
    "category": "web"
  },
  {
    "pattern": "hex color code",
    "regex": "#[0-9a-fA-F]{6}",
    "explanation": "Matches a 6-digit hexadecimal color code",
    "category": "design"
  },
  {
    "pattern": "IPv4 address",
    "regex": "\\b(?:\\d{1,3}\\.){3}\\d{1,3}\\b",
    "explanation": "Matches a standard IPv4 address format",
    "category": "network"
  },
  {
    "pattern": "date in YYYY-MM-DD format",
    "regex": "\\b\\d{4}-\\d{2}-\\d{2}\\b",
    "explanation": "Matches dates formatted as YYYY-MM-DD",
    "category": "date"
  },
  {
    "pattern": "time in HH:MM format",
    "regex": "\\b\\d{1,2}:\\d{2}\\b",
    "explanation": "Matches time formatted as HH:MM",
    "category": "time"
  },
  {
    "pattern": "credit card number",
    "regex": "\\b(?:\\d{4}[- ]?){3}\\d{4}\\b",
    "explanation": "Matches a standard credit card number format",
    "category": "finance"
  },
  {
    "pattern": "social security number (SSN)",
    "regex": "\\b\\d{3}-\\d{2}-\\d{4}\\b",
    "explanation": "Matches a U.S. Social Security Number format",
    "category": "personal"
  },
  {
    "pattern": "MAC address",
    "regex": "\\b(?:[0-9a-fA-F]{2}[:-]){5}[0-9a-fA-F]{2}\\b",
    "explanation": "Matches a standard MAC address format",
    "category": "network"
  },
  {
    "pattern": "ISBN number",
    "regex": "\\b(?:ISBN(?:-13)?:? )?(?=[-0-9 ]{17}|[-0-9X ]{13})97[89][- ]?[0-9]+[- ]?[0-9]+[- ]?[0-9]+[- ]?[0-9X]\\b",
    "explanation": "Matches ISBN numbers, both 10 and 13 digits",
    "category": "books"
  },
  {
    "pattern": "HTML tag",
    "regex": "<[a-z][a-z0-9]*\\b[^>]*>(.*?)</[a-z][a-z0-9]*>",
    "explanation": "Matches HTML tags with content",
    "category": "web"
  },
  {
    "pattern": "JSON object",
    "regex": "\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\}",
    "explanation": "Matches a JSON object structure",
    "category": "data"
  },
  {
    "pattern": "Markdown link",
    "regex": "\\[([^\\]]+)\\]\\(([^)]+)\\)",
    "explanation": "Matches Markdown links in the format [text](URL)",
    "category": "markdown"
  },
  {
    "pattern": "Base64 encoded string",
    "regex": "^[A-Za-z0-9+/]+={0,2}$",
    "explanation": "Matches Base64 encoded strings",
    "category": "encoding"
  },
  {
    "pattern": "UUID",
    "regex": "\\b[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}\\b",
    "explanation": "Matches a standard UUID format",
    "category": "identifiers"
  },
  {
    "pattern": "CSS class name",
    "regex": "\\.[a-zA-Z_][a-zA-Z0-9_-]*",
    "explanation": "Matches CSS class names starting with a dot",
    "category": "web"
  },
  {
    "pattern": "CSS ID selector",
    "regex": "#[a-zA-Z_][a-zA-Z0-9_-]*",
    "explanation": "Matches CSS ID selectors starting with a hash",
    "category": "web"
  },
  {
    "pattern": "Git tag name",
    "regex": "^[a-zA-Z0-9][a-zA-Z0-9._-]{0,38}[a-zA-Z0-9]$",
    "explanation": "Matches valid Git tag names",
    "category": "version control"
  },
  {
    "pattern": "Git branch name",
    "regex": "^[a-zA-Z0-9][a-zA-Z0-9._-]{0,38}[a-zA-Z0-9]$",
    "explanation": "Matches valid Git branch names",
    "category": "version control"
  }
]
